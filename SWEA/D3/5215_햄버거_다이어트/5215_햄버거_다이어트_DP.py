import sys
sys.stdin = open('input.txt', 'r')

T = int(input())
for t in range(1, T + 1):
    N, L = map(int, input().split())
    point_and_kcal = [list(map(int, input().split())) for _ in range(N)]
    dp = [0] * (L + 1)
    # dp[j] = 칼로리 j를 사용했을 때 얻을 수 있는 최대 점수
    # 최대 j칼로리까지 선택 할 수 있을때, 얻을수 있는 가장 높은 점수를 저장하므로,
    # 우리가 구하는건 최대 L칼로리 , 즉 dp[L]을 구하면 된다.
    '''
    점진적으로 "최적해"를 쌓아가는 방식, 백트래킹보다 빠르다.
    
    for j in range(L, cal - 1, -1):
        dp[j] = max(dp[j], dp[j-cal] + taste
        
        만약 이번에 (300점, 500kcal)의 재료일 때 이 식이 진행된다고 생각해보자, 
        j는 1000, 999, 998 ... 500 이다.
        이 중 j = 700 일때를 비교해보면, 
        dp[700] = max(dp[700], dp[200] + taste)
        즉 지금까지 쌓아온 700 kcal내의 최적해를 쓸것이냐, 
            아니면 새롭게 200kcal까지의 최적해 + 이번 재료 의 조합을 쓸것이냐.
            당연히 이 둘 중 최댓값이 새로운 최적해(최적 조합)이다.
        이렇게 최적해를 점점 쌓아가면서, 
        dp[1000]일때 1000kcal "까지"의 최적해 즉 최대 점수를 구할 수 있게 된다.
        dp[j]는 j kcal "일 때" 가 아니고, j kcal "까지"의 최적해라는게 중요한 점인듯. 
    '''

    for taste, cal in point_and_kcal:   # (100,200) (300, 500) (250, 300) (500, 1000) (400, 400)
        for j in range(L, cal - 1, -1):     # 제한 칼로리부터 현재 재료의 칼로리까지 역순으로
            dp[j] = max(dp[j], dp[j - cal] + taste)
            '''
            taste, cal = (100, 200)
            dp[1000]에 재할당한다.
                최댓값을 : 지금 dp[1000]와 dp[1000-200] + 100 중에서 
                처음엔 전부 0 이니까 j = 1000, 999, 998... 200 까지 전부 dp[j] = 100이 된다.
                
            taste, cal = (300, 500)
            dp[1000]에 재할당한다.
                최댓값을 : 지금 dp[1000](=100)와 dp[1000-300] + 500 중에서 
                    dp[1000] = dp[700] + 500
                             = 600
            
            dp[999]에 재할당한다.
                최댓값을 : 지금 dp[999](=100)와 dp[999-300] + 500 중에서
                    dp[999] = dp[699] + 500
                            = 600
                            .
                            .
                            . 

            '''

    print(f'#{t} {dp[L]}')
    # 1000kcal를 사용했을 때 얻을 수 있는 최대 점수

    '''
    kcal을 1kcal씩 나눠서 생각?
    문제에서 kcal가 100의 배수다, 10의 배수다 라는 말 없음.
        test case에서 장난치면 687kcal 이럴수도 있다.
        그래서 1kcal씩 나누는거
    '''

