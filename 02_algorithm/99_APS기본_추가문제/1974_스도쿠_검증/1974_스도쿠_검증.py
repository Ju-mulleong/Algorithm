import sys
sys.stdin = open('input, txt', 'r')

T = int(input())

def is_sudoku():
    # 각 탐색의 시행마다 조건 맞는지 확인, 조건 안맞으면 즉시 0 return

    # 행 우선 탐색, 열 우선 탐색 동시에
    for i in range(9):
        for j in range(9):
            arr[i][j]
            arr[j][i]

for tc in range(1, 1+T):
    arr = [list(map(int, input().split())) for _ in range(9)]   # 9*9크기의 스도쿠
    lst = [0] * 9

    # 같은 줄에서 1~9 하나씩 사용
    # 3*3 격자에서 또한 1~9 하나씩 사용
    #   이 때 격자는 항상 9칸, 위치 정해져있음

    # 행 우선 탐색, 열 우선 탐색 동시에 하자
    '''
    제약사항에서 arr의 input값은 모두 1~9사이의 정수이다. 
    조건에 안맞는 경우는
    1. 같은 수 중복해서 존재 (= 1~9 중 어떤 수가 빠져있음)
    밖에 없다.
    미리 빈 리스트 만들어놓고, 인덱스를 각각 1~9의 수라고 생각하자. (0~8)
    그 수 나올때마다 그 수의 인덱스에 해당하는 원소에 +1 한다.
    만약 이미 그 원소에 1이있다면(중복이라면) 0 return
    
    '''

    # 격자를 또 다른 2차원배열로 보고, 안의 원소를 set로 저장하자.
    # set는 순서 없으니까 (1, 2, 3... 9)인지 확인하면 된다.




